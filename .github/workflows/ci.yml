name: Rust

on:
  push:
    branches: ["release/*"]
  # pull_request:
  #   branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

# TODO add musl to CI see DEVELOPMENT.md

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Run tests
        run: cargo test
  publish_cratesio:
    needs: test
    name: Publish to crates.io
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Install Extra Cargo Crates
        run: cargo install cargo-caw-publish
      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo caw-publish
  github_release_create:
    needs: test
    name: Github Release - Creating Release
    runs-on: ubuntu-latest
    outputs:
      pkg_ver: ${{ steps.capture_version_from_cargo.outputs.pkg_ver }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      # TODO create a cargo crate to query data from Cargo.toml

      - id: capture_version_from_cargo
        name: Capture Version from Cargo.toml
        run: |
          ver=$(cat Cargo.toml | grep -e '^version = ".*"$' | sed 's/version = "\(.*\)"/\1/')
          echo "pkg_ver=$ver" >> "$GITHUB_OUTPUT"

      - name: Create Github Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          PKG_VER: ${{ steps.capture_version_from_cargo.outputs.pkg_ver }}
        run: |
          gh release create \
            --title v$PKG_VER --notes-file RELEASE.md $PKG_VER
  github_release_upload:
    needs: github_release_create
    name: Github Release - Upload Artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build:
          - linux gnu x86_64
          - linux musl x64
        include:
          - build: linux musl x64
            os: ubuntu-latest
            rust: stable
            rust_target: x86_64-unknown-linux-musl
          - build: linux gnu x86_64
            os: ubuntu-latest
            rust: stable
            rust_target: x86_64-unknown-linux-gnu
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Dependencies - musl
        if: matrix.rust_target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get install -y --no-install-recommends musl-tools libssl-dev
          rustup target add x86_64-unknown-linux-musl

      - name: Build
        run: cargo build -r --target ${{ matrix.rust_target }}

      - name: Adjust Target Name
        run: |
          cp \
            target/${{ matrix.rust_target }}/release/http_status_code_check \
            target/${{ matrix.rust_target }}/release/http_status_code_check-${{ matrix.rust_target }}

      - name: Publish to Github Releases
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          # TODO resolving to blank
          PKG_VER: ${{ needs.github_release_create.outputs.pkg_ver }}
        run: |
          gh release upload \
            $PKG_VER \
            target/${{ matrix.rust_target }}/release/http_status_code_check-${{ matrix.rust_target }}
